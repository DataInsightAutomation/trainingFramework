### model
# model_name_or_path: /tmp/Meta-Llama-3.1-8B-Instruct
# model_name_or_path: /home/dut7071/lun/LLaMA-Factory/Llama-3.2-1B-Instruct
# model_name_or_path: /home/dut7071/lun/Llama-3.2-1B-Instruct
model_name_or_path: llamafactory/tiny-random-Llama-3
trust_remote_code: true

### method
stage: sft
do_train: true
finetuning_type: lora
lora_rank: 8
lora_target: all

### dataset
# dataset: identity,alpaca_en_demo
# dataset: alpaca_en_demo
dataset: custom_test_smaller_alpaca
# dataset_dir: /home/dut7071/lun/LLaMA-Factory/data

# dataset_dir: /home/sdp/lun/exploration/torchtune
# dataset_file: mini_alpaca_500.json
template: llama3
cutoff_len: 2048
max_samples: 1000
overwrite_cache: true
preprocessing_num_workers: 16
dataloader_num_workers: 4

### output
output_dir: saves/tiny-random-Llama-3/lora/sft
logging_steps: 10
save_steps: 500
plot_loss: true
overwrite_output_dir: true
save_only_model: false
report_to: none  # choices: [none, wandb, tensorboard, swanlab, mlflow]

### train
per_device_train_batch_size: 1
gradient_accumulation_steps: 8
learning_rate: 1.0e-4
num_train_epochs: 1.0
lr_scheduler_type: cosine
warmup_ratio: 0.1
bf16: true
# ddp_timeout: 180000000
resume_from_checkpoint: null

### eval
# eval_dataset: alpaca_en_demo
# val_size: 0.1
# per_device_eval_batch_size: 1
# eval_strategy: steps
# eval_steps: 500

# resources_per_worker:
#   XPU: 1
#   CPU: 1
#   # GPU: 1
#   # resources:
#       # accelerator_type:A100-80G: 0.01
# num_workers: 1

# ddp_backend: null
# device: auto  # or explicitly set to "xpu" or "cpu" depending on your setup
