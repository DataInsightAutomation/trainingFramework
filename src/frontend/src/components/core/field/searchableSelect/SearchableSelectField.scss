@use '../../../theme' as *;
// Theme-aware override for active option (selected)
.list-group-item.active,
.list-group-item.active:focus,
.list-group-item.active:hover {
  @include themed-styles(
    (background-color, accent),
    (border-color, accent),
    (color, color)
  );
  box-shadow: 0 0 0 2px rgba(255, 122, 0, 0.18) !important;
  outline: none !important;
  transition: box-shadow 0.18s, background 0.18s, color 0.18s;
}
.searchable-select-container {
  // Theme input styles for the select input itself
  .form-control {
    border-radius: 0.7rem;
    @include themed-styles((background, input-bg), (color, color), (border, input-border));
    box-shadow: 0 2px 12px 0 map-get(map-get($themes, dark), accent-gradient);
    transition: box-shadow 0.22s, border-color 0.22s, background 0.22s;
    &::placeholder {
      @include themed-styles((color, input-placeholder));
      opacity: 1;
      text-shadow: 0 1px 2px map-get(map-get($themes, dark), accent-light);
    }
    &:focus {
      @include themed-styles((box-shadow, accent-gradient), (background, accent-bg), (border-color, input-focus), (color, accent));
    }
    // Force dark theme input background and color for .dark-theme
    .dark-theme & {
      @include themed-styles((background, input-bg), (color, color), (border, input-border));
    }
    // Force light theme input background and color for .light-theme
    .light-theme & {
      @include themed-styles((background, input-bg), (color, color), (border, input-border));
    }
  }

  // Style the dropdown toggle/clear buttons to match theme
  .btn-outline-secondary {
    @include themed-styles((color, accent), (border-color, accent));
    background: transparent;
    &:hover, &:focus, &:active {
      @include themed-styles((background, accent-gradient), (color, on-accent), (border-color, accent-dark));
      box-shadow: 0 2px 8px 0 map-get(map-get($themes, dark), accent-light);
    }
  }
  position: relative;
  width: 100%;
  
  .searchable-select-dropdown {
    position: absolute;
    width: 100%;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1000;
    margin-top: 2px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    border: 1px solid rgba(0,0,0,0.1);
    border-radius: 4px;
    
    &.light-theme {
      @include themed-styles((background-color, surface));
    }

    &.dark-theme {
      @include themed-styles((background-color, surface-alt));
    }

    .list-group-item {
      // Remove Bootstrap blue and force theme accent for all active/selected states
      &.active,
      &.active:focus,
      &.active:hover,
      &.selected,
      &.selected:focus,
      &.selected:hover {
        @include themed-styles((background-color, accent), (border-color, accent), (color, on-accent));
        box-shadow: 0 0 0 2px rgba(255, 122, 0, 0.18) !important;
        outline: none !important;
        transition: box-shadow 0.2s, background 0.2s, color 0.2s;
      }
      &:hover {
        @include themed-styles((background-color, accent-bg), (color, accent));
      }
      &[aria-selected="true"] {
        @include themed-styles((background-color, accent), (color, on-accent));
        box-shadow: 0 0 0 2px rgba(255, 122, 0, 0.18) !important;
      }
      &[aria-selected="true"]:hover {
        @include themed-styles((background-color, accent-bg), (color, accent));
      }

      &.create-option {
        @include themed-styles((color, accent), (background-color, accent-bg), (border-left, accent));
        font-weight: 500;
        
        &:hover {
          @include themed-styles((background-color, accent-bg), (color, accent));
        }

        .small {
          font-size: 80%;
        }
      }

      &.dark-theme.create-option {
        @include themed-styles((color, accent-light), (background-color, accent-bg), (border-left, accent-light));
        
        &:hover {
          @include themed-styles((background-color, accent-bg), (color, accent-light));
        }
      }
    }
  }
  
  .form-text {
    font-size: 0.85rem;
    margin-top: 0.25rem;
  }
}

// Add this to TrainTranslation.ts to support the new fields
// exports.translations = {
//   en: {
//     ...existing translations...,
//     addCustomModel: 'Add custom model: "{input}"',
//     enterCustomModelName: 'Enter custom model name or path',
//     modelNameDescription: 'Select a model or enter a custom model name/path (e.g., local path or HuggingFace model ID)'
//   },
//   zh: {
//     ...existing translations...,
//     addCustomModel: '添加自定义模型: "{input}"',
//     enterCustomModelName: '输入自定义模型名称或路径',
//     modelNameDescription: '选择模型或输入自定义模型名称/路径（例如，本地路径或 HuggingFace 模型 ID）'
//   }
// }
